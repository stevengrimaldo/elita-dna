{"version":3,"sources":["components/reviews/reviews.css","components/reviews/reviews.scss","global/defaults/_config.scss","global/defaults/_typography.scss","../node_modules/slick-carousel/slick/slick.scss","global/defaults/_mixins.scss","global/defaults/_grid.scss","global/defaults/_functions.scss"],"names":[],"mappings":"AAAA,sBCyFI,sBC9DS,eC1BG,CAAA,6BF2GV,sBClFM,eCnBI,CAAA,2BFgGV,sBC7EM,eCbI,CAAA,cACf,kBCXa,cACD,sBACG,2BACW,yBACF,AACD,sBACF,qBACD,iBACJ,AACK,mBACJ,uCACe,CAAA,YAChC,kBAEa,gBACA,cACD,SACH,SACN,CAAO,kBALA,YAQM,CAAA,qBARN,eAYK,WACA,CAAA,qDAIF,qCACS,AAGL,4BACH,CAAA,aACd,kBAGa,OACN,MACD,aACM,CAAA,uCAJD,WAQK,aACA,CAAA,mBATL,UAaG,CAAA,4BAbf,iBAiBoB,CAAA,aACf,WAGM,YACC,eACI,YAWH,CAAA,uBAdb,WAKe,CAAA,iBAEX,aACa,CAAA,+BAEG,YACH,CAAA,0BAKF,mBACS,CAAA,gCAjBxB,aAqBiB,CAAA,4BArBjB,iBAyBoB,CAAA,6BAzBpB,cA6BiB,YACD,4BACA,CAAA,0BAGJ,YACC,CAAA,SH1Fb,iBACc,CAAA,iBACZ,kBACiB,CAAA,kCACf,kBACiB,CAAA,uBAChB,eIQQ,oBJNgB,sBIPX,CAAA,iCJYZ,kBACY,QACL,oCAAA,AACM,4BAAA,YAEF,YACD,WACD,eACC,UACD,CAAE,+EATJ,WAYM,UACF,YACC,yBC3BN,kBD6BQ,mBACK,CAAA,wCAjBZ,YAoBK,WACD,gCAAA,AACI,wBAAA,UACL,QACD,CAAA,uCAxBF,iCAAA,AA2BQ,yBAAA,YACH,WACD,UACD,QACD,CAAA,gCAGT,kBACQ,CAAA,gCAER,oBACS,mDAAA,AACsB,0CAAA,CAAA,gCAE/B,qBACW,YACA,eACG,CAAA,mCACZ,qBACW,mBACO,cACR,WACR,CAAS,0CACT,6BACoB,YACV,WACD,mBACQ,yBCnEf,eDqEQ,yCAAA,AACI,gCAAA,CAAA,uGAIZ,wBC1EA,CAAA,sBD4EC,iBKzEG,gBCRN,cN0FI,eIvED,iBAII,sBAjBC,sBJuFJ,CAAA,6BALV,kBAOW,CAAE,4BAPb,mBAUa,CAAA,2BACV,eIhFL,oBAEE,sBAfF,eJmGM,CAAA,6BAJJ,eIlFF,oBAEE,sBAfF,eJwGM,CAAA,mCIJe,iBJSnB,kBACE,CAAA,uBACA,eIlGJ,oBAEE,sBAfF,CAAA,sBJiHK,iBK/GD,gBACK,eDUT,iBAIE,qBAjBF,CAAA,CAAA,wCAoGgC,mCJyB1B,YAEI,CAAA,sBACD,eInHT,iBAIE,oBAjBF,CAAA,2BJuIK,eI1HL,oBAEE,qBAfF,eJ2IQ,CAAA,6BAHJ,eI3HJ,oBAEE,sBAfF,cJ+IQ,CAAA,CAAA,mCI3Ca,iBJiDnB,kBACE,CAAA,uBACA,eI1IJ,oBAEE,oBAfF,CAAA,sBJyJK,eI5IL,iBAIE,qBAjBF,CAAA,CAAA","file":"reviews.css","sourcesContent":[".reviews__review-text{font-family:\"MuseoSlab\";font-weight:300}.reviews__review-author time{font-family:\"Open Sans\";font-weight:400}.reviews__review-author h6{font-family:\"Open Sans\";font-weight:700}.slick-slider{position:relative;display:block;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{position:relative;overflow:hidden;display:block;margin:0;padding:0}.slick-list:focus{outline:none}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-track,.slick-slider .slick-list{-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);-o-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}.slick-track{position:relative;left:0;top:0;display:block}.slick-track:before,.slick-track:after{content:\"\";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=\"rtl\"] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.reviews{text-align:center}.reviews__header{margin-bottom:50px}.reviews__header .icon--container{margin-bottom:30px}.reviews__header-title{font-size:45px;line-height:initial;letter-spacing:-1.35px}.reviews--container .slick-arrow{position:absolute;top:50%;transform:translateY(-100%);font-size:0;height:60px;width:28px;cursor:pointer;z-index:10}.reviews--container .slick-arrow::before,.reviews--container .slick-arrow::after{content:'';width:2px;height:30px;background-color:#ff6651;position:absolute;border-radius:100px}.reviews--container .slick-arrow::before{bottom:25px;right:13px;transform:rotate(45deg);left:auto;top:auto}.reviews--container .slick-arrow::after{transform:rotate(-45deg);bottom:auto;right:13px;left:auto;top:25px}.reviews--container .slick-prev{left:5.5555555556%}.reviews--container .slick-next{right:5.5555555556%;transform:translateY(-100%) rotate(180deg)}.reviews--container .slick-dots{display:inline-block;font-size:0;margin-top:60px}.reviews--container .slick-dots li{display:inline-block;vertical-align:top;margin:0 15px;font-size:0}.reviews--container .slick-dots li button{background-color:transparent;height:15px;width:15px;border-radius:30px;border:1px solid #ff6651;cursor:pointer;transition:background-color 250ms}.reviews--container .slick-dots li:hover button,.reviews--container .slick-dots li.slick-active button{background-color:#ff6651}.reviews__review-text{max-width:1060px;width:58.88889%;margin:0 auto;font-size:26px;line-height:36px;letter-spacing:-.78px;quotes:'“' '”' '‘' '’'}.reviews__review-text::before{content:open-quote}.reviews__review-text::after{content:close-quote}.reviews__review-author h6{font-size:22px;line-height:initial;letter-spacing:-.66px;margin-top:30px}.reviews__review-author time{font-size:18px;line-height:initial;letter-spacing:-.54px;margin-top:10px}@media screen and (max-width: 48em){.reviews__header{margin-bottom:40px}.reviews__header-title{font-size:45px;line-height:initial;letter-spacing:-1.35px}.reviews__review-text{max-width:1195px;width:66.38889%;font-size:24px;line-height:34px;letter-spacing:-.72px}}@media screen and (max-width: 41.6875em){.reviews--container .slick-dots li{margin:0 5px}.reviews__review-text{font-size:20px;line-height:30px;letter-spacing:-.6px}.reviews__review-author h6{font-size:20px;line-height:initial;letter-spacing:-.6px;margin-top:15px}.reviews__review-author time{font-size:16px;line-height:initial;letter-spacing:-.48px;margin-top:5px}}@media screen and (max-width: 30em){.reviews__header{margin-bottom:20px}.reviews__header-title{font-size:30px;line-height:initial;letter-spacing:-.9px}.reviews__review-text{font-size:16px;line-height:26px;letter-spacing:-.48px}}\n","@import '../../global/defaults/config',\n'../../global/defaults/mixins',\n'../../global/defaults/grid',\n'../../global/defaults/typography',\n'../../../node_modules/slick-carousel/slick/slick.scss';\n\n.reviews {\n  text-align: center;\n  &__header {\n    margin-bottom: 50px;\n    .icon--container {\n      margin-bottom: 30px;\n    }\n    &-title {\n      @include font-size(45, initial);\n    }\n  }\n  &--container {\n    .slick {\n      &-arrow {\n        position: absolute;\n        top: 50%;\n        transform: translateY(-100%);\n        // overflow: hidden;\n        font-size: 0;\n        height: 60px;\n        width: 28px;\n        cursor: pointer;\n        z-index: 10;\n        &::before,\n        &::after {\n          content: '';\n          width: 2px;\n          height: 30px;\n          background-color: $persimmon;\n          position: absolute;\n          border-radius: 100px;\n        }\n        &::before {\n          bottom: 25px;\n          right: 13px;\n          transform: rotate(45deg);\n          left: auto;\n          top: auto;\n        }\n        &::after {\n          transform: rotate(-45deg);\n          bottom: auto;\n          right: 13px;\n          left: auto;\n          top: 25px;\n        }\n      }\n      &-prev {\n        left: 5.5555555556%;\n      }\n      &-next {\n        right: 5.5555555556%;\n        transform: translateY(-100%) rotate(180deg);\n      }\n      &-dots {\n        display: inline-block;\n        font-size: 0;\n        margin-top: 60px;\n        li {\n          display: inline-block;\n          vertical-align: top;\n          margin: 0 15px;\n          font-size: 0;\n          button {\n            background-color: transparent;\n            height: 15px;\n            width: 15px;\n            border-radius: 30px;\n            border: 1px solid $persimmon;\n            cursor: pointer;\n            transition: background-color 250ms;\n          }\n          &:hover,\n          &.slick-active {\n            button {\n              background-color: $persimmon;\n            }\n          }\n        }\n      }\n    }\n  }\n  &__review {\n    &-text {\n      @include col(8);\n      margin: 0 auto;\n      @include font-size(26);\n      @extend %MuseoSlab;\n      quotes: '“' '”' '‘' '’';\n      &::before {\n        content: open-quote;\n      }\n      &::after {\n        content: close-quote;\n      }\n    }\n    &-author {\n      h6 {\n        @include font-size(22, initial);\n        @extend %OpenSansbold;\n        margin-top: 30px;\n      }\n      time {\n        @include font-size(18, initial);\n        @extend %OpenSans;\n        margin-top: 10px;\n      }\n    }\n  }\n  @include mq($max, $tablet) {\n    &__header {\n      margin-bottom: 40px;\n      &-title {\n        @include font-size(45, initial);\n      }\n    }\n    &__review {\n      &-text {\n        @include col(9);\n        @include font-size(24);\n      }\n    }\n  }\n  @include mq($max, $phablet) {\n    &--container {\n      .slick {\n        &-dots {\n          li {\n            margin: 0 5px;\n          }\n        }\n      }\n    }\n    &__review {\n      &-text {\n        @include font-size(20);\n      }\n      &-author {\n        h6 {\n          @include font-size(20, initial);\n          margin-top: 15px;\n        }\n        time {\n          @include font-size(16, initial);\n          margin-top: 5px;\n        }\n      }\n    }\n  }\n  @include mq($max, $mobile) {\n    &__header {\n      margin-bottom: 20px;\n      &-title {\n        @include font-size(30, initial);\n      }\n    }\n    &__review {\n      &-text {\n        @include font-size(16);\n      }\n    }\n  }\n}\n","// Base Colors\n$white: #fff;\n$black: #000;\n\n// Colors\n$emperor: #4e4449;\n$persimmon: #ff6651;\n$cinnabar: #e8523d;\n$strikemaster: #94607e;\n$ecru: #f9f6f0;\n\n$text-color: $emperor;\n$link-color: $persimmon;\n$link-color-hover: $cinnabar;\n\n$base-font-size: 16px;\n$base-font-weight: 400;\n$base-line-height: 24px;\n$media-path-prod: '/sites/all/themes/elitedna/media';\n$media-path: '/media';\n$media-path: $media-path-prod;\n$image-path: $media-path + '/img';\n$svg-path: $media-path + '/svg';\n$font-path: $media-path + '/font';\n$svg-path-white: $media-path + '/svg/white';\n\n$open-sans: 'Open Sans';\n$museo-slab: 'MuseoSlab';\n\n$primary-font-family: $open-sans;\n$secondary-font-family: $museo-slab;\n$fallback: Helvetica, Arial, sans-serif;\n\n$base: 1800;\n$desktop: 1440px;\n$laptop: 1024;\n$tablet: 768;\n$phablet: 667;\n$mobile: 480;\n\n$min: 'min-width';\n$max: 'max-width';\n\n$module-padding: 80px;\n$half-module-padding: $module-padding / 2;\n","%MuseoSlab {\n  @include font(300, $museo-slab);\n}\n%MuseoSlabBold {\n  @include font(700, $museo-slab);\n}\n%OpenSans {\n  @include font(400);\n}\n%OpenSansSemibold {\n  @include font(600);\n}\n%OpenSansbold {\n  @include font(700);\n}\n%OpenSansExtrabold {\n  @include font(800);\n}\n","/* Slider */\n\n.slick-slider {\n    position: relative;\n    display: block;\n    box-sizing: border-box;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: pan-y;\n    touch-action: pan-y;\n    -webkit-tap-highlight-color: transparent;\n}\n.slick-list {\n    position: relative;\n    overflow: hidden;\n    display: block;\n    margin: 0;\n    padding: 0;\n\n    &:focus {\n        outline: none;\n    }\n\n    &.dragging {\n        cursor: pointer;\n        cursor: hand;\n    }\n}\n.slick-slider .slick-track,\n.slick-slider .slick-list {\n    -webkit-transform: translate3d(0, 0, 0);\n    -moz-transform: translate3d(0, 0, 0);\n    -ms-transform: translate3d(0, 0, 0);\n    -o-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n}\n\n.slick-track {\n    position: relative;\n    left: 0;\n    top: 0;\n    display: block;\n\n    &:before,\n    &:after {\n        content: \"\";\n        display: table;\n    }\n\n    &:after {\n        clear: both;\n    }\n\n    .slick-loading & {\n        visibility: hidden;\n    }\n}\n.slick-slide {\n    float: left;\n    height: 100%;\n    min-height: 1px;\n    [dir=\"rtl\"] & {\n        float: right;\n    }\n    img {\n        display: block;\n    }\n    &.slick-loading img {\n        display: none;\n    }\n\n    display: none;\n\n    &.dragging img {\n        pointer-events: none;\n    }\n\n    .slick-initialized & {\n        display: block;\n    }\n\n    .slick-loading & {\n        visibility: hidden;\n    }\n\n    .slick-vertical & {\n        display: block;\n        height: auto;\n        border: 1px solid transparent;\n    }\n}\n.slick-arrow.slick-hidden {\n    display: none;\n}\n","@import 'functions';\n\n@mixin font($font-weight: $base-font-weight, $font-family: $primary-font-family) {\n  font-family: $font-family;\n  font-weight: $font-weight;\n}\n@mixin letter-spacing($ps-value, $font-size) {\n  letter-spacing: (($ps-value * $font-size) / 1000) + px;\n}\n@mixin clearfix {\n  &::before,\n  &::after {\n    content: '';\n    display: table;\n  }\n  &::after {\n    clear: both;\n  }\n}\n@mixin font-size($size, $line-height: null, $letter-spacing: null) {\n  font-size: $size + px;\n  @if $line-height {\n    line-height: $line-height;\n  } @else {\n    line-height: ($size + 10) + px;\n  }\n  @if $letter-spacing {\n    @include letter-spacing($letter-spacing, $size);\n  } @else {\n    @include letter-spacing(-30, $size);\n  }\n}\n// =============================================================================\n// REM Unit Converter\n// =============================================================================\n@mixin rem($property, $values) {\n  // Create a couple of empty lists as output buffers.\n  $font-size: $base-font-size;\n  $px-values: ();\n  $rem-values: ();\n\n  // Loop through the $values list\n  @each $value in $values {\n    // For each property value, if it's in rem or px, derive both rem and\n    // px values for it and add those to the end of the appropriate buffer.\n    // Ensure all pixel values are rounded to the nearest pixel.\n    @if $value == 0 or $value == 0px {\n      // 0 -- use it without a unit\n      $px-values: join($px-values, 0);\n      $rem-values: join($rem-values, 0);\n    } @else if type-of($value) == number and not unitless($value) and unit($value) == px {\n      // px value given - calculate rem value from font-size\n      $new-rem-value: $value / $font-size;\n      $px-values: join($px-values, round($value));\n      $rem-values: join($rem-values, #{$new-rem-value}rem);\n    } @else if type-of($value) == number and not unitless($value) and unit($value) == '%' {\n      // % value given - don't add px or rem\n      $px-values: join($px-values, #{$value});\n      $rem-values: join($rem-values, #{$value});\n    } @else if $value == auto {\n      // auto - don't add px or rem\n      $px-values: join($px-values, auto);\n      $rem-values: join($rem-values, auto);\n    } @else {\n      // unitless value - use those directly as rem and calculate the px-fallback\n      $px-values: join($px-values, round($value * $font-size));\n      $rem-values: join($rem-values, #{$value}rem);\n    }\n  }\n\n  // output the converted rules\n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n}\n// =============================================================================\n// Aspect Ratio\n// =============================================================================\n@mixin aspect-ratio($width, $height) {\n  position: relative;\n  &::before {\n    display: block;\n    content: ' ';\n    width: 100%;\n    padding-top: ($height / $width) * 100%;\n  }\n  > * {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n}\n// =============================================================================\n// Media Query\n// =============================================================================\n// Supports\n// @include mq($max, breakpoint) {}\n// @include mq('', min-breakpoint, max-breakpoint) {}\n// @include mq($min, breakpoint) {}\n@mixin mq($constraint, $viewport1, $viewport2: null) {\n  $vp1: $viewport1 / 16;\n  @if $constraint == $min {\n    @media screen and ($min: #{$vp1}em) {\n      @content;\n    }\n  } @else if $constraint == $max {\n    @media screen and ($max: #{$vp1}em) {\n      @content;\n    }\n  } @else {\n    $vp2: $viewport2 / 16;\n    @media screen and ($min: #{$vp1}em) and ($max: #{$vp2}em) {\n      @content;\n    }\n  }\n}\n// =============================================================================\n// Font Face\n// =============================================================================\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: '?',\n    svg: '#' + str-replace($name, ' ', '_')\n  );\n\n  $formats: (\n    otf: 'opentype',\n    ttf: 'truetype'\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n// =============================================================================\n// Angle\n// =============================================================================\n@mixin angle($pseudo, $flip: false, $angle: 3deg, $background: inherit) {\n  // Possible values for $pseudo are: before, after, both\n  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {\n    position: relative;\n    z-index: 1;\n    $selector: if($pseudo == 'both', '&:before, &:after', '&:#{$pseudo}');\n\n    #{$selector} {\n      background: $background;\n      content: '';\n      display: block;\n      height: 50%;\n      left: 0;\n      position: absolute;\n      right: 0;\n      z-index: -1;\n      -webkit-backface-visibility: hidden; // for Chrome Windows\n    }\n\n    @if $pseudo == 'before' {\n      #{$selector} {\n        top: 0;\n\n        @if $flip {\n          transform: skewY($angle * -1);\n          transform-origin: 0 0;\n        } @else {\n          transform: skewY($angle);\n          transform-origin: 100% 0;\n        }\n      }\n    }\n\n    @if $pseudo == 'after' {\n      #{$selector} {\n        bottom: 0;\n\n        @if $flip {\n          transform: skewY($angle);\n          transform-origin: 0 100%;\n        } @else {\n          transform: skewY($angle * -1);\n          transform-origin: 100%;\n        }\n      }\n    }\n\n    @if $pseudo == 'both' {\n      &:before {\n        top: 0;\n\n        @if $flip {\n          transform: skewY($angle * -1);\n          transform-origin: 0 0;\n        } @else {\n          transform: skewY($angle);\n          transform-origin: 100% 0;\n        }\n      }\n\n      &:after {\n        bottom: 0;\n\n        @if $flip {\n          transform: skewY($angle);\n          transform-origin: 0 0;\n        } @else {\n          transform: skewY($angle * -1);\n          transform-origin: 100%;\n        }\n      }\n    }\n  }\n}\n","@import 'functions';\n\n// =============================================================================\n// Responsive Width\n// =============================================================================\n@mixin rspw($max-width, $context, $padding, $margin) {\n  @if ($context) {\n    @if ($max-width) {\n      $newcontext: ($context - $padding - $margin);\n      max-width: #{$max-width}px;\n      width: pc($max-width, $newcontext);\n    }\n  }\n}\n// =============================================================================\n// Column Creator\n// Supports\n// oneCol    - 115px\n// twoCol    - 250px\n// threeCol  - 385px\n// fourCol   - 520px\n// fiveCol   - 655px\n// sixCol    - 790px\n// sevenCol  - 925px\n// eightCol  - 1060px\n// nineCol   - 1195px\n// tenCol    - 1330px\n// elevenCol - 1465px\n// =============================================================================\n@mixin col($columns: null, $container: $base, $padding: 0, $margin: 0) {\n  $parent: $container;\n\n  @if $columns {\n    @if $columns <= 11 {\n      $width: (($columns * 115) + (($columns - 1) * 20));\n\n      @if ($container <= 12) {\n        $parent: (($container * 115) + (($container - 1) * 20));\n      }\n      @include rspw($width, $parent, $padding, $margin);\n      @content;\n    }\n  }\n}\n","@function pc($target, $context, $padding: 0) {\n  @return percentage($target / ($context - $padding));\n}\n@function rem($value) {\n  @return ($value / 16px);\n}\n"]}